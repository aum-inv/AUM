using OM.Lib.Base.Utils;
using OM.Lib.Entity;
using OM.Lib.Framework.Db;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace OM.Atman.Chakra.App
{
    public partial class TwoLineRuleForm : Form
    {
        List<TwoLineTradeRule> ruleList = new List<TwoLineTradeRule>();

        public TwoLineRuleForm()
        {
            InitializeComponent();

            SiseEvents.Instance.SiseHandler += Instance_SiseHandler;
            TradeEvents.Instance.TradeRuleHandler += Instance_TradeRuleHandler;
        }

        private void Instance_TradeRuleHandler(string itemCode, string message)
        {
            tbLog.Invoke(new MethodInvoker(() =>
               {
                   tbLog.AppendText(itemCode + "=>" + message);
                   tbLog.AppendText(Environment.NewLine);
               }));
        }
        private void Instance_SiseHandler(string itemCode, CurrentPrice price)
        {
            try
            {
                foreach (var rule in ruleList)
                {
                    if (rule.RuleInfo.IsUse == "N") continue;
                    if (rule.RuleInfo.Item != itemCode) continue;

                    rule.Analysis(price);
                }
            }
            catch (Exception ex)
            {
            }
        }

       
        private void btnLoad_Click(object sender, EventArgs e)
        {
            AtmanRule rule = new AtmanRule();
            Entities entities = (Entities)rule.Collect();

            dgv.Rows.Clear();

            ruleList.Clear();

            foreach (var item in entities.Cast<AtmanRule>())
            {
                if (item.RuleID.StartsWith("TL"))
                {
                    int idx = dgv.Rows.Add(item.RuleID, item.Item, item.TimeType, item.IsUse == "Y", item.IsBuyDone);
                    dgv.Rows[idx].Tag = item;

                    ruleList.Add(new TwoLineTradeRule(item));
                }
            }
        }

        private void dgv_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.ColumnIndex < 0 || e.RowIndex < 0) return;

            if (e.ColumnIndex == 3)
            {
                dgv.CommitEdit(DataGridViewDataErrorContexts.Commit);
            }
        }

        private void dgv_CellValueChanged(object sender, DataGridViewCellEventArgs e)
        {
            if (e.ColumnIndex < 0 || e.RowIndex < 0) return;

            var rule = dgv.Rows[e.RowIndex].Tag as AtmanRule;
            if (e.ColumnIndex == 3)
            {
                if (dgv.Rows[e.RowIndex].Cells[e.ColumnIndex].Value.ToString() == "True")
                {
                    rule.IsUse = "Y";
                }
                else
                {
                    rule.IsUse = "N";
                }
            }           
        }

        private void btnTest_Click(object sender, EventArgs e)
        {
            var rule = btnTest.Tag as AtmanRule;

            AtomTradeRule trade = new AtomTradeRule(rule);

            //터치
            trade.Analysis(new CurrentPrice() { price = "45" });
            //trade.Analysis("CL", new CurrentPrice() { price = "46" });
            //trade.Analysis("CL", new CurrentPrice() { price = "47" });

            //매입
            //trade.Analysis("CL", new CurrentPrice() { price = "46" });
            //trade.Analysis("CL", new CurrentPrice() { price = "45" });

            //로스컷
            //trade.Analysis("CL", new CurrentPrice() { high = "50", low = "40", price = "44" });
            //trade.Analysis("CL", new CurrentPrice() { high = "50", low = "40", price = "43" });
            //trade.Analysis("CL", new CurrentPrice() { high = "50", low = "40", price = "42" });

            //수익
            //trade.Analysis("CL", new CurrentPrice() { price = "58" });
            //trade.Analysis("CL", new CurrentPrice() { price = "59" });
            //trade.Analysis("CL", new CurrentPrice() { price = "60" });
            
        }
    }
}
