using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using OM.Lib.Base.Enums;

namespace OM.Vikala.Chakra.App.Mains
{
    public partial class UserToolStrip : UserControl
    {
        TimeIntervalEnum timeInterval = TimeIntervalEnum.Day;
        bool isAutoReload = true;

        public event EventHandler ItemCodeChangedEvent;
        public event EventHandler FlowDirectionChangedEvent;
        public event EventHandler TimerIntervalChangedEvent;
        public event EventHandler AutoReloadChangedEvent;
        public event EventHandler ReloadEvent;

        public UserToolStrip()
        {
            InitializeComponent();
            this.Load += UserToolStrip_Load;
        }
        
        private void UserToolStrip_Load(object sender, EventArgs e)
        {
            setItems();
            setInterval();
        }

        public void setProgressValue(int n)
        {
            this.Invoke(new MethodInvoker(() => { tspb.Value = n; }));
        }

        private void setItems()
        {
            //Load Items
            tscbItem.ComboBox.DataSource = ItemCodeSet.Items;
            tscbItem.ComboBox.DisplayMember = "Name";
            tscbItem.ComboBox.ValueMember = "Code";
            tscbItem.SelectedIndex = 0;
        }
        private void setInterval()
        {
            tsbTime1.BackColor = Color.WhiteSmoke;
            tsbTime2.BackColor = Color.WhiteSmoke;
            tsbTime3.BackColor = Color.WhiteSmoke;
            tsbTime4.BackColor = Color.WhiteSmoke;
            tsbTime5.BackColor = Color.WhiteSmoke;
            tsbTime6.BackColor = Color.WhiteSmoke;
            tsbTime7.BackColor = Color.WhiteSmoke;
            tsbTime8.BackColor = Color.WhiteSmoke;
            tsbTime9.BackColor = Color.WhiteSmoke;

            if (timeInterval == TimeIntervalEnum.Minute_01) tsbTime1.BackColor = Color.Yellow;
            if (timeInterval == TimeIntervalEnum.Minute_05) tsbTime2.BackColor = Color.Yellow;
            if (timeInterval == TimeIntervalEnum.Minute_10) tsbTime3.BackColor = Color.Yellow;
            if (timeInterval == TimeIntervalEnum.Minute_30) tsbTime4.BackColor = Color.Yellow;
            if (timeInterval == TimeIntervalEnum.Minute_60) tsbTime5.BackColor = Color.Yellow;
            if (timeInterval == TimeIntervalEnum.Minute_120) tsbTime6.BackColor = Color.Yellow;
            if (timeInterval == TimeIntervalEnum.Day) tsbTime7.BackColor = Color.Yellow;
            if (timeInterval == TimeIntervalEnum.Week) tsbTime8.BackColor = Color.Yellow;
            if (timeInterval == TimeIntervalEnum.Month) tsbTime9.BackColor = Color.Yellow;
        }
                
        private void tsbFD1_Click(object sender, EventArgs e)
        {
            if (FlowDirectionChangedEvent != null)
            {
                FlowDirectionChangedEvent(FlowDirection.TopDown, e);
            }
        }

        private void tsbFD2_Click(object sender, EventArgs e)
        {
            if (FlowDirectionChangedEvent != null)
            {
                FlowDirectionChangedEvent(FlowDirection.LeftToRight, e);
            }
        }

        private void tscbItem_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (ItemCodeChangedEvent != null)
            {
                ItemCodeChangedEvent((tscbItem.SelectedItem as ItemData), e);
            }

            tscbItem.Enabled = false;
            tscbItem.Enabled = true;
            //MessageBox.Show((tscbItem.SelectedItem as ItemData).Name.ToString());
        }

        private void IntervalButton_Click(object sender, EventArgs e)
        {
            var b = sender as ToolStripButton;
            int n = Convert.ToInt32(b.Tag);
            
            if (n == 1) timeInterval = TimeIntervalEnum.Minute_01;
            else if (n == 2) timeInterval = TimeIntervalEnum.Minute_05;
            else if (n == 3) timeInterval = TimeIntervalEnum.Minute_10;
            else if (n == 4) timeInterval = TimeIntervalEnum.Minute_30;
            else if (n == 5) timeInterval = TimeIntervalEnum.Minute_60;
            else if (n == 6) timeInterval = TimeIntervalEnum.Minute_120;
            else if (n == 7) timeInterval = TimeIntervalEnum.Day;
            else if (n == 8) timeInterval = TimeIntervalEnum.Week;
            else if (n == 9) timeInterval = TimeIntervalEnum.Month;

            if (TimerIntervalChangedEvent != null)
            {
                TimerIntervalChangedEvent(timeInterval, e);
            }
            setInterval();
        }

        private void tsbAutoReload_Click(object sender, EventArgs e)
        {
            isAutoReload = !isAutoReload;

            AutoReloadChangedEvent(isAutoReload, e);

            if (isAutoReload)
                this.tsbAutoReload.Image = global::OM.Vikala.Chakra.App.Properties.Resources.refreshing_2;
            else
                this.tsbAutoReload.Image = global::OM.Vikala.Chakra.App.Properties.Resources.refreshing_0;
        }

        private void tsbReload_Click(object sender, EventArgs e)
        {
            ReloadEvent(sender, e);
        }
    }
}
