using OM.Lib.Entity;
using OM.PP.Chakra.Ctx;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace OM.Atman.Chakra.App
{
    public partial class OrderSimpleForm : Form
    {
        OrderSimpleRule rule = new OrderSimpleRule();

        public OrderSimpleForm()
        {
            InitializeComponent();
            this.Load += TradeRuleForm_Load;
            SiseEvents.Instance.SiseHandler += Instance_SiseHandler;
        }
        private void TradeRuleForm_Load(object sender, EventArgs e)
        {
            rule.Item = tbItem.Text;
        }
        private void Instance_SiseHandler(string itemCode, CurrentPrice price)
        {
            try
            {
                if (rule.Item != itemCode) return;

                tbCurPrice.Text = price.price;

                if (chkCurPrice.Checked) tbOrderPrice.Text = price.price;

                rule.Analysis(price);
            }
            catch (Exception ex)
            {
            }
        }

        private void tbItem_TextChanged(object sender, EventArgs e)
        {
            if (tbItem.Text.Length == 0) return;
            rule.Item = tbItem.Text;
        }

        private void tbQty_TextChanged(object sender, EventArgs e)
        {
            if (tbQty.Text.Length == 0) return;
            rule.Quantity = Convert.ToInt32(tbQty.Text);
        }

        private void rdoTradeType1_CheckedChanged(object sender, EventArgs e)
        {
            if (rdoTradeType1.Checked) rule.TradeType = "1";         
        }

        private void rdoTradeType2_CheckedChanged(object sender, EventArgs e)
        {
            if (rdoTradeType2.Checked) rule.TradeType = "2";
        }
        
        private void tbOrderPrice_TextChanged(object sender, EventArgs e)
        {
            if (tbOrderPrice.Text.Length == 0) return;
            rule.OrderPrice = Convert.ToDouble(tbOrderPrice.Text);
        }

        private void rdoPosition1_CheckedChanged(object sender, EventArgs e)
        {
            if (rdoPosition1.Checked) rule.TradeType = "매도";
        }

        private void rdoPosition2_CheckedChanged(object sender, EventArgs e)
        {
            if (rdoPosition2.Checked) rule.TradeType = "매수";
        }

        private void tbAvgPrice2_TextChanged(object sender, EventArgs e)
        {
            if (tbAvgPrice2.Text.Length == 0) return;
            rule.AvgPrice2 = Convert.ToDouble(tbAvgPrice2.Text);
        }

        private void tbAvgPrice1_TextChanged(object sender, EventArgs e)
        {
            if (tbAvgPrice1.Text.Length == 0) return;
            rule.AvgPrice1 = Convert.ToDouble(tbAvgPrice1.Text);
        }

        private void tbLossPrice1_TextChanged(object sender, EventArgs e)
        {
            if (tbLossPrice1.Text.Length == 0) return;
            rule.LossPrice1 = Convert.ToDouble(tbLossPrice1.Text);
        }

        private void tbLossPrice2_TextChanged(object sender, EventArgs e)
        {
            if (tbLossPrice2.Text.Length == 0) return;
            rule.LossPrice2 = Convert.ToDouble(tbLossPrice2.Text);
        }

        private void chkIsUseLoss_CheckedChanged(object sender, EventArgs e)
        {
            rule.IsUseLossPrice = chkIsUseLoss.Checked;
        }

        private void tbRevenuePrice_TextChanged(object sender, EventArgs e)
        {
            if (tbRevenuePrice.Text.Length == 0) return;
            rule.RevenuePrice = Convert.ToDouble(tbRevenuePrice.Text);
        }

        private void tbRevenueRate_TextChanged(object sender, EventArgs e)
        {
            if (tbRevenueRate.Text.Length == 0) return;
            rule.RevenueRate = Convert.ToDouble(tbRevenueRate.Text);
        }

        private void tbMinimumRevenue2_TextChanged(object sender, EventArgs e)
        {
            if (tbMinimumRevenue2.Text.Length == 0) return;
            rule.MinimumRevenuePrice2 = Convert.ToDouble(tbMinimumRevenue2.Text);
        }

        private void tbMinimumRevenue1_TextChanged(object sender, EventArgs e)
        {
            if (tbMinimumRevenue1.Text.Length == 0) return;
            rule.MinimumRevenuePrice1 = Convert.ToDouble(tbMinimumRevenue1.Text);
        }

        private void chkIsUseRevenue1_CheckedChanged(object sender, EventArgs e)
        {
            rule.IsUseRevenue1 = chkIsUseRevenue1.Checked;
        }

        private void chkIsUseRevenue2_CheckedChanged(object sender, EventArgs e)
        {
            rule.IsUseRevenue2 = chkIsUseRevenue2.Checked;
        }

        private void chkMinimumRevenue2_CheckedChanged(object sender, EventArgs e)
        {
            rule.IsMinimumRevenue2 = chkMinimumRevenue2.Checked;
        }

        private void chkMinimumRevenue1_CheckedChanged(object sender, EventArgs e)
        {
            rule.IsMinimumRevenue1 = chkMinimumRevenue1.Checked;
        }

        private void chkIsUseRevenue_CheckedChanged(object sender, EventArgs e)
        {
            rule.IsUseRevenue = chkIsUseRevenue.Checked;
        }

        private void btnBuy2_Click(object sender, EventArgs e)
        {
            XingContext.Instance.ClientContext.OrderBuySell(rule.Item, "2", rule.TradeType, rule.OrderPrice.ToString(), rule.Quantity.ToString());
        }

        private void btnBuy1_Click(object sender, EventArgs e)
        {
            XingContext.Instance.ClientContext.OrderBuySell(rule.Item, "1", rule.TradeType, rule.OrderPrice.ToString(), rule.Quantity.ToString());
        }

        private void btnSell1_Click(object sender, EventArgs e)
        {
            XingContext.Instance.ClientContext.OrderBuySell(rule.Item, "1", rule.TradeType, rule.OrderPrice.ToString(), rule.Quantity.ToString());
        }

        private void btnSell2_Click(object sender, EventArgs e)
        {
            XingContext.Instance.ClientContext.OrderBuySell(rule.Item, "2", rule.TradeType, rule.OrderPrice.ToString(), rule.Quantity.ToString());
        }
    }
}
