using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using OM.PP.Chakra;
using OM.Lib.Base.Data;
using System.Windows.Forms.DataVisualization.Charting;

namespace OM.Vikala.Controls.Charts
{
    public partial class Candlestick : UserControl
    {
        public int MaximumDisplayItemCount
        {
            get; set;
        } = 30;
        public bool IsAutoScrollX
        {
            get;
            set;
        } = true;

        public List<ISourceData> ChartData
        {
            get;
            set;
        }

        public void Display(List<ISourceData> chartData = null)
        {
            ChartData = chartData;

            Reset();

            Display();
        }

        public Candlestick()
        {
            InitializeComponent();
            InitializeControl();
        }

        public void InitializeControl()
        {
            System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea = chart.ChartAreas[0];
            System.Windows.Forms.DataVisualization.Charting.Series series = chart.Series[0];

            chartArea.Area3DStyle.Inclination = 15;
            chartArea.Area3DStyle.IsClustered = true;
            chartArea.Area3DStyle.IsRightAngleAxes = false;
            chartArea.Area3DStyle.Perspective = 10;
            chartArea.Area3DStyle.Rotation = 10;
            chartArea.Area3DStyle.WallWidth = 0;

            chartArea.AxisX.IsLabelAutoFit = true;
            chartArea.AxisX.LabelStyle.Font = new System.Drawing.Font("돋움", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            chartArea.AxisX.LabelStyle.IsEndLabelVisible = false;
            chartArea.AxisX.LineColor = System.Drawing.Color.DimGray;
            chartArea.AxisX.MajorGrid.LineColor = System.Drawing.Color.FromArgb(((int)(((byte)(64)))), ((int)(((byte)(64)))), ((int)(((byte)(64)))), ((int)(((byte)(64)))));

            chartArea.AxisX2.IsLabelAutoFit = true;
            chartArea.AxisX2.LabelStyle.Font = new System.Drawing.Font("돋움", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            chartArea.AxisX2.LabelStyle.ForeColor = System.Drawing.Color.DimGray;
            chartArea.AxisX2.LineColor = System.Drawing.Color.DimGray;

            chartArea.AxisY.IsLabelAutoFit = true;
            chartArea.AxisY.IsStartedFromZero = false;
            chartArea.AxisY.LabelStyle.Font = new System.Drawing.Font("돋움", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            chartArea.AxisY.LabelStyle.ForeColor = System.Drawing.Color.DimGray;
            chartArea.AxisY.LineColor = System.Drawing.Color.DimGray;
            chartArea.AxisY.MajorGrid.LineColor = System.Drawing.Color.FromArgb(((int)(((byte)(64)))), ((int)(((byte)(64)))), ((int)(((byte)(64)))), ((int)(((byte)(64)))));
            chartArea.AxisY2.IsLabelAutoFit = true;
            chartArea.AxisY2.LabelStyle.Font = new System.Drawing.Font("돋움", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(129)));
            chartArea.AxisY2.LabelStyle.ForeColor = System.Drawing.Color.DimGray;
            chartArea.AxisY2.LineColor = System.Drawing.Color.DimGray;
            chartArea.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(64)))), ((int)(((byte)(165)))), ((int)(((byte)(191)))), ((int)(((byte)(228)))));
            chartArea.BackGradientStyle = System.Windows.Forms.DataVisualization.Charting.GradientStyle.TopBottom;
            chartArea.BackSecondaryColor = System.Drawing.Color.White;
            chartArea.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(64)))), ((int)(((byte)(64)))), ((int)(((byte)(64)))), ((int)(((byte)(64)))));
            chartArea.BorderDashStyle = System.Windows.Forms.DataVisualization.Charting.ChartDashStyle.Solid;

            chartArea.InnerPlotPosition.Auto = false;
            chartArea.InnerPlotPosition.Height = 90F;
            chartArea.InnerPlotPosition.Width = 93F;
            chartArea.InnerPlotPosition.X = 2F;
            chartArea.Name = "chartArea";

            chartArea.Position.Auto = false;
            chartArea.Position.Height = 95F;
            chartArea.Position.Width = 98F;
            chartArea.Position.Y = 5F;
            chartArea.ShadowColor = System.Drawing.Color.Transparent;
           
            series.BorderColor = System.Drawing.Color.Transparent;
            series.BorderWidth = 2;
            series.ChartArea = "chartArea";
            series.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Candlestick;
            series.Color = System.Drawing.Color.Black;
            series.CustomProperties = "PriceDownColor=Blue, PriceUpColor=Red";
            series.IsVisibleInLegend = false;
            series.Name = "chartSerie";
            series.ShadowColor = System.Drawing.Color.Transparent;
            series.XValueType = System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime;
            series.YAxisType = System.Windows.Forms.DataVisualization.Charting.AxisType.Secondary;
            series.YValuesPerPoint = 4;                 
        }
      
        public void Reset()
        {
            chart.Series[0].Points.Clear();
        }

        public void Display()
        {
            if (ChartData == null) return;
            
            foreach (var item in ChartData)
            {
                chart.Series[0].Points.AddXY(item.DTime, item.HighPrice, item.LowPrice, item.OpenPrice, item.ClosePrice);
            }

            chart.ChartAreas[0].AxisY2.Maximum = ChartData.Max(m => m.HighPrice);
            chart.ChartAreas[0].AxisY2.Minimum = ChartData.Min(m => m.LowPrice);

            chart.ChartAreas[0].AxisY2.LabelStyle.Format = "{N2}";

            SetScrollBar();

            DisplayView();
        }
        public void SetScrollBar()
        {
            hScrollBar.Visible = IsAutoScrollX;

            int maxScrollValue = (int)Math.Ceiling((Convert.ToDouble(ChartData.Count) / Convert.ToDouble(MaximumDisplayItemCount))) ;
            int minScrollValue = 1;

            hScrollBar.Minimum = minScrollValue;
            hScrollBar.Maximum = maxScrollValue;
            hScrollBar.Value = maxScrollValue;
        }

        public void DisplayView()
        {
            int scrollVal = hScrollBar.Value;
            if (scrollVal < hScrollBar.Minimum) scrollVal = hScrollBar.Minimum;
            if (scrollVal > hScrollBar.Maximum) scrollVal = hScrollBar.Maximum;

            List<ISourceData> viewLists = null;
            if (scrollVal == hScrollBar.Minimum)
            {
                int maxIndex = ChartData.Count > MaximumDisplayItemCount ? MaximumDisplayItemCount - 1 : ChartData.Count;
                viewLists = ChartData.GetRange(0, MaximumDisplayItemCount);
            }
            else if (scrollVal == hScrollBar.Maximum)
            {
                int minIndex = ChartData.Count < MaximumDisplayItemCount ? 0 : ChartData.Count - MaximumDisplayItemCount;
                viewLists = ChartData.GetRange(minIndex, MaximumDisplayItemCount);
            }
            else
            {
                int currentIndex = (scrollVal - 1) * MaximumDisplayItemCount;
                viewLists = ChartData.GetRange(currentIndex, MaximumDisplayItemCount);
            }
            if (viewLists != null)
            {
                chart.ChartAreas[0].AxisY2.Maximum = viewLists.Max(m => m.HighPrice);
                chart.ChartAreas[0].AxisY2.Minimum = viewLists.Min(m => m.LowPrice);
                chart.ChartAreas[0].AxisX.Maximum = viewLists[viewLists.Count - 1].DTime.ToOADate();
                chart.ChartAreas[0].AxisX.Minimum = viewLists[0].DTime.ToOADate();
            }
        }

        private void hScrollBar_Scroll(object sender, ScrollEventArgs e)
        {
            DisplayView();
        }
    }
}
