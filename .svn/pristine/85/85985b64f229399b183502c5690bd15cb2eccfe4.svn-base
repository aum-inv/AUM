using MetroFramework.Forms;
using OM.Lib.Base.Data;
using OM.PP.Chakra;
using OM.PP.Chakra.Ctx;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace OM.Vikala.Chakra.App
{
    public partial class MainForm : MetroForm
    {
        public MainForm()
        {
            InitializeComponent();

            serverInfo();
        }

        private void serverInfo()
        {
            PPServerConfigData.IP = ConfigurationManager.AppSettings["PPService_IP"];
            PPServerConfigData.Port = Convert.ToInt32(ConfigurationManager.AppSettings["PPService_Port"]);

            PPContext.Instance.OnCreateClient();
        }

        private void btnLoadData_Click(object sender, EventArgs e)
        {
            var list = PPContext.Instance.ClientContext.GetSourceData(Lib.Base.Enums.FinancialClassificationEnum.Indices
                , Lib.Base.Enums.ItemCode.Indices.Kospi200
                , Lib.Base.Enums.TimeIntervalEnum.Day
                , null
                , null
                , 120);

            List<ISourceData> sourceDatas = new List<ISourceData>();
            foreach(var m in list)
            {
                ISourceData sourceData = new S_CandleItemData(
                    m.OpenVal, m.HighVal, m.LowVal, m.CloseVal, m.Volume, m.DT
                    );

                sourceDatas.Add(sourceData);
            }
          
            chartCS.Display(sourceDatas);
        }

        private void numericUpDown1_ValueChanged(object sender, EventArgs e)
        {
            chartCS.MaximumDisplayItemCount = Convert.ToInt32(numericUpDown1.Value);
            chartCS.Display();
        }
    }
}
