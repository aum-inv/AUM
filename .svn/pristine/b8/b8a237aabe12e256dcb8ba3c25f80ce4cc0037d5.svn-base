using OM.Lib.Base.Utils;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace OM.Atman.Chakra.App.Cals
{
    public static class LosscutCalculater
    {
        /// <summary>
        ///  
        /// </summary>
        /// <returns></returns>
        public static string Calculator(string itemCode, string strategyType, string position, double buyPrice, double currrentPrice)
        {
            string losscutPrice = "0";
            int losscutTick = 0;
            try
            {  
                if(strategyType ==  "1") losscutTick = Config.LosscutConfig.LOW_LIMIT_TICKS;
                else if (strategyType == "2") losscutTick = Config.LosscutConfig.MIDDLE_LIMIT_TICKS;
                else if (strategyType == "3") losscutTick = Config.LosscutConfig.HIGH_LIMIT_TICKS;
                int roundNum = ItemCodeUtil.GetItemCodeRoundNum(itemCode);
                //매도
                if (position == "1")
                {
                    //손실
                    if (buyPrice < currrentPrice)
                    {
                        losscutPrice = Math.Round(PriceTick.GetUpPriceOfTick(itemCode, buyPrice, losscutTick), roundNum).ToString();
                    }
                    //수익
                    else 
                    {
                        losscutPrice = Math.Round(PriceTick.GetUpPriceOfTick(itemCode, currrentPrice, losscutTick), roundNum).ToString();
                    }
                }
                //매수
                else if (position == "2")
                {
                    //손실
                    if (buyPrice > currrentPrice)
                    {
                        losscutPrice = Math.Round(PriceTick.GetDownPriceOfTick(itemCode, buyPrice, losscutTick), roundNum).ToString();
                    }
                    //수익
                    else
                    {
                        losscutPrice = Math.Round(PriceTick.GetDownPriceOfTick(itemCode, currrentPrice, losscutTick), roundNum).ToString();
                    }
                }
            }
            catch (Exception)
            {
            }
            return losscutPrice;
        }
    }
}
