using OM.Lib.Base.Enums;
using OM.Vikala.Controls.Charts;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace OM.Vikala.Chakra.App.Mains
{
    public class BaseForm : Form
    {
        protected bool autoReload = true;

        protected int itemCnt = 120;

        protected TimeIntervalEnum timeInterval = TimeIntervalEnum.Day;

        protected FlowDirectionTypeEnum flowDirection = FlowDirectionTypeEnum.TABLE;

        protected ChartEvents chartEvent = new ChartEvents();

        protected UserToolStrip userToolStrip = null;

        protected ItemData SelectedItemData
        {
            get; set;
        }

        public BaseForm()
        {
            this.FormClosing += BaseForm_FormClosing;
        }

        private void BaseForm_FormClosing(object sender, FormClosingEventArgs e)
        {
            timer1.Stop();
            timer1.Dispose();
        }

        protected Timer timer1 = new Timer();
        int timerCnt = (60 - DateTime.Now.Second);

        public virtual void loadChartControls() { }
        public virtual void setFlow() { }
        public virtual void setTimer() {
            timer1.Tick += Timer1_Tick;
            timer1.Interval = 1000;
            timer1.Enabled = true;
            timer1.Start();
        }

        private void Timer1_Tick(object sender, EventArgs e)
        {
            timerCnt--;
            if (autoReload && timerCnt == 0)
            {
                timerCnt = 60;
                loadData();
            }
            userToolStrip.setTimeValue(timerCnt);
        }

        public virtual void loadData() { }

        internal void setToolStrip(UserToolStrip userToolStrip)
        {
            this.userToolStrip = userToolStrip;

            this.userToolStrip.ItemCodeChangedEvent += UserToolStrip1_ItemCodeChangedEvent;
            this.userToolStrip.TimerIntervalChangedEvent += UserToolStrip1_TimerIntervalChangedEvent;
            this.userToolStrip.FlowDirectionChangedEvent += UserToolStrip1_FlowDirectionChangedEvent;
            this.userToolStrip.AutoReloadChangedEvent += UserToolStrip1_AutoReloadChangedEvent;
            this.userToolStrip.ReloadEvent += UserToolStrip1_ReloadEvent;
            this.userToolStrip.ItemCountChangedEvent += UserToolStrip1_ItemCountChangedEvent;
            this.userToolStrip.ScreenCaptureEvent += UserToolStrip1_ScreenCaptureEvent;
        }

        private void UserToolStrip1_ScreenCaptureEvent(object sender, EventArgs e)
        {
            Panel pnlContent = this.Controls["pnlContent"] as Panel;

            Bitmap bmp = new Bitmap(pnlContent.Width, pnlContent.Height);
            pnlContent.DrawToBitmap(bmp, new Rectangle(0, 0, pnlContent.Width, pnlContent.Height));

            SaveFileDialog saveFileDialog1 = new SaveFileDialog();
            saveFileDialog1.Filter = "JPeg Image|*.jpg|Bitmap Image|*.bmp|Gif Image|*.gif";
            saveFileDialog1.Title = "Save an Image File";
            saveFileDialog1.ShowDialog();

            if (saveFileDialog1.FileName != "")
            {
                bmp.Save(saveFileDialog1.FileName, System.Drawing.Imaging.ImageFormat.Jpeg);
            }
        }

        private void UserToolStrip1_ItemCountChangedEvent(object sender, EventArgs e)
        {
            itemCnt = Convert.ToInt32(sender);
        }

        private void UserToolStrip1_ReloadEvent(object sender, EventArgs e)
        {
            loadData();
        }

        private void UserToolStrip1_AutoReloadChangedEvent(object sender, EventArgs e)
        {
            autoReload = (bool)sender;
        }

        private void UserToolStrip1_FlowDirectionChangedEvent(object sender, EventArgs e)
        {
            flowDirection = (FlowDirectionTypeEnum)sender;
            setFlow();
        }

        private void UserToolStrip1_TimerIntervalChangedEvent(object sender, EventArgs e)
        {
            timeInterval = (TimeIntervalEnum)sender;
        }

        private void UserToolStrip1_ItemCodeChangedEvent(object sender, EventArgs e)
        {
            ItemData itemData = (ItemData)sender;
            SelectedItemData = itemData;

            this.Text = "VIKALA CHAKRA - " + itemData.Name;
        }
    }
}
