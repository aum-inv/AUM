<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSave.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>